(window.webpackJsonp=window.webpackJsonp||[]).push([[11],{465:function(t,s,a){"use strict";a.r(s);var e=a(4),r=Object(e.a)({},(function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h1",{attrs:{id:"管理后台的开发经验"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#管理后台的开发经验"}},[t._v("#")]),t._v(" 管理后台的开发经验")]),t._v(" "),a("h2",{attrs:{id:"权限开发经验"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#权限开发经验"}},[t._v("#")]),t._v(" 权限开发经验")]),t._v(" "),a("p",[t._v("越权一般分为两种情况")]),t._v(" "),a("ol",[a("li",[a("p",[t._v("垂直越权： 普通用户拥有了超级管理员的权限")])]),t._v(" "),a("li",[a("p",[t._v("水平越权： 只有查看用户1信息的权限，却有了查看用户2信息的权限")])])]),t._v(" "),a("p",[t._v("鉴权模型一般分为 RBAC 和 ABAC")]),t._v(" "),a("ol",[a("li",[a("p",[t._v("通过RBAC (role based access control) 基于角色的权限控制， 一般我们通过设计权限合集分配个某个角色，然后通过角色分配给某个用户，这样实现了权限和用户的映射")])]),t._v(" "),a("li",[a("p",[t._v("ABAC（attribute base access control） 基于属性的权限控制， BAC的思想是基于用户、以及将要访问的数据的属性、以及各种环境因素去动态计算用户是否有权限进行操作")])])]),t._v(" "),a("div",{staticClass:"language-js line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// https://juejin.cn/post/6941734947551969288")]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br")])])])}),[],!1,null,null,null);s.default=r.exports}}]);