(window.webpackJsonp=window.webpackJsonp||[]).push([[27],{481:function(e,t,a){"use strict";a.r(t);var n=a(4),s=Object(n.a)({},(function(){var e=this,t=e.$createElement,a=e._self._c||t;return a("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[a("h4",{attrs:{id:"线上笔试"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#线上笔试"}},[e._v("#")]),e._v(" 线上笔试")]),e._v(" "),a("p",[e._v("1.实现一个非原生类(数组, Map/Set 等)的浅拷贝函数，此函数接收一个非原生类对象(可能有自定义的原型链), 返回一个此对象的浅拷贝。"),a("br"),e._v(" "),a("a",{attrs:{href:"https://github.com/Vitaminaq/interview-collection/issues/10",target:"_blank",rel:"noopener noreferrer"}},[e._v("解析"),a("OutboundLink")],1)]),e._v(" "),a("p",[e._v("2.实现一个加权随机函数，此函数接收一个整数数组 input, 此数组:")]),e._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("1. 元素个数 N < 10000\n2. 元素的值大于 0 且小于 100\n")])]),e._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[e._v("1")]),a("br"),a("span",{staticClass:"line-number"},[e._v("2")]),a("br")])]),a("p",[e._v("返回一个随机函数, 此随机函数:")]),e._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("1. 返回 [0, N - 1] 之间的一个随机整数\n2. 每个整数 i 被返回的概率为:数组 input 的第 i 个元素的值 / 数组 arr 的所有元素之和\n")])]),e._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[e._v("1")]),a("br"),a("span",{staticClass:"line-number"},[e._v("2")]),a("br")])]),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("例: 给定一个数组 input, 值为 [4, 2, 1, 3],调用 createWeightedRandom(input), 应当返回一个函数, \n此函数返回一个 0 - 3 之间的一个随机整数, 相应的概率分别为: 4/10, 2/10, 1/10, 3/10.\n")])]),e._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[e._v("1")]),a("br"),a("span",{staticClass:"line-number"},[e._v("2")]),a("br")])]),a("p",[e._v("分别按以下两种要求实现该函数:")]),e._v(" "),a("ol",[a("li",[e._v("空间复杂度不限, 返回的随机函数时间复杂度 O(1)")]),e._v(" "),a("li",[e._v("空间复杂度 O(N), 返回的随机函数时间复杂度 O(logN)"),a("br"),e._v(" "),a("a",{attrs:{href:"https://github.com/Vitaminaq/interview-collection/issues/11",target:"_blank",rel:"noopener noreferrer"}},[e._v("解析"),a("OutboundLink")],1)])]),e._v(" "),a("p",[e._v("3.实现一个异步任务执行器 AsyncWorker，此 AsyncWorker: 最多只能同时执行 capacity，个异步任务. 若正在执行的任务数达到 capacity，则新加入的任务需要等待其中一个正在执行的任务完成后才能被执行。"),a("br"),e._v(" "),a("a",{attrs:{href:"https://github.com/Vitaminaq/interview-collection/issues/12",target:"_blank",rel:"noopener noreferrer"}},[e._v("解析"),a("OutboundLink")],1)]),e._v(" "),a("p",[e._v("相对于要求会有些许的严格，想要顺利的进到面试环节，一定要做到100分，我就是大意了，随便填了几个，hr直呼可惜。")])])}),[],!1,null,null,null);t.default=s.exports}}]);